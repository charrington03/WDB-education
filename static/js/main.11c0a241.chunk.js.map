{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","account","setAccount","queueStatus","setQueueStatus","queueList","setQueueList","queueCount","setQueueCount","MainPage","StudentPage","addQueueItem","formText","dateObj","oldQueueList","slice","newObj","text","date","id","console","log","AdminPage","LoginPage","loginFunc","props","className","onClick","currQueueStatus","Queue","QueueAdd","setFormText","class","onSubmit","e","preventDefault","Date","type","name","onChange","target","value","placeholder","removeQueueItem","newList","forEach","item","push","map","queueObj","QueueItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11c0a241.chunk.js","sourcesContent":["import { React, useEffect, useState } from \"react\";\nimport \"./App.css\";\n\n/*\nQueue item = {desc, datetime, id}\n*/\n\nexport default function App() {\n  const [account, setAccount] = useState(null);\n  const [queueStatus, setQueueStatus] = useState(false);\n  const [queueList, setQueueList] = useState([]);\n  const [queueCount, setQueueCount] = useState(0);\n\n  const addQueueItem = (formText, dateObj) => {\n    let oldQueueList = queueList.slice();\n    const newObj = { text: formText, date: dateObj, id: queueCount };\n    setQueueCount(queueCount + 1);\n    console.log(\"--- Pre queueList Change: \");\n    console.log(queueList);\n    setQueueList([...oldQueueList, newObj]);\n    console.log(\"--- Post queueList Change: \");\n    console.log(queueList);\n  };\n\n  if (account === \"Student\") {\n    return (\n      <>\n        <MainPage\n          queueStatus={queueStatus}\n          account={account}\n          setAccount={setAccount}\n        />\n        <StudentPage\n          queueStatus={queueStatus}\n          queueList={queueList}\n          setQueueList={setQueueList}\n          addQueueItem={addQueueItem}\n        />\n      </>\n    );\n  } else if (account === \"Admin\") {\n    return (\n      <>\n        <MainPage\n          queueStatus={queueStatus}\n          account={account}\n          setAccount={setAccount}\n        />\n        <AdminPage\n          queueStatus={queueStatus}\n          setQueueStatus={setQueueStatus}\n          queueList={queueList}\n          setQueueList={setQueueList}\n        />\n      </>\n    );\n  }\n  return <LoginPage loginFunc={setAccount} />;\n}\n\nfunction LoginPage(props) {\n  return (\n    <div className=\"login-page\">\n      <div className=\"login-buttons\">\n        <button\n          className=\"login-button\"\n          onClick={() => props.loginFunc(\"Student\")}\n        >\n          Login As Student\n        </button>\n        <button\n          className=\"login-button\"\n          onClick={() => props.loginFunc(\"Admin\")}\n        >\n          Login As Admin\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction MainPage(props) {\n  return (\n    <div className=\"main-page\">\n      <h3>Logged In As {props.account}</h3>\n      <button className=\"logout-button\" onClick={() => props.setAccount(null)}>\n        Logout\n      </button>\n      <h1 className={props.queueStatus ? \"green-font\" : \"red-font\"}>\n        The Queue is Currently {props.queueStatus ? \"Open\" : \"Closed\"}\n      </h1>\n    </div>\n  );\n}\n\nfunction AdminPage(props) {\n  const toggleQueue = () => {\n    let currQueueStatus = props.queueStatus;\n    props.setQueueStatus(!currQueueStatus);\n  };\n\n  const clearQueue = () => {\n    props.setQueueList([]);\n  };\n\n  return (\n    <div className=\"admin-page\">\n      <button className=\"queue-button\" onClick={toggleQueue}>\n        {props.queueStatus ? \"Close\" : \"Open\"} Queue\n      </button>\n      <button className=\"clear-button\" onClick={clearQueue}>\n        Remove All Queued Students\n      </button>\n      <Queue queueList={props.queueList} setQueueList={props.setQueueList} />\n    </div>\n  );\n}\n\nfunction StudentPage(props) {\n  return (\n    <div className=\"student-page\">\n      {props.queueStatus && <QueueAdd addQueueItem={props.addQueueItem} />}\n      <Queue queueList={props.queueList} setQueueList={props.setQueueList} />\n    </div>\n  );\n}\n\nfunction QueueAdd(props) {\n  const [formText, setFormText] = useState(\"\");\n\n  const handleChange = (e) => {\n    setFormText(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.addQueueItem(formText, Date());\n    setFormText(\"\");\n  };\n\n  return (\n    <>\n      <form class=\"add-assignment\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"formText\"\n          onChange={handleChange}\n          value={formText}\n          placeholder=\"Assignment\"\n        ></input>\n\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    </>\n  );\n}\n\nfunction Queue(props) {\n  const removeQueueItem = (id) => {\n    let newList = [];\n    props.queueList.forEach((item) => {\n      if (item.id !== id) newList.push(item);\n    });\n    props.setQueueList(newList);\n  };\n\n  return (\n    <>\n      <h2>Queue:</h2>\n      <ul>\n        {props.queueList.map((queueObj) => {\n          return (\n            <li key={queueObj.id}>\n              <QueueItem\n                queueObj={queueObj}\n                removeQueueItem={removeQueueItem}\n              />\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n\nfunction QueueItem(props) {\n  /*\n    queueObj = {text: string, date: Date object, id: number}\n  */\n  return (\n    <div className=\"queue-item\">\n      <p>\n        Assignment: {props.queueObj.text}, Time Created: {props.queueObj.date}\n      </p>\n      <button onClick={() => props.removeQueueItem(props.queueObj.id)}>\n        Remove\n      </button>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}